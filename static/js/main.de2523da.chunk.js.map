{"version":3,"sources":["api.ts","components/Navigation.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/Peopletable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Errors","Navigation","className","role","isActive","classNames","to","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","sex","slug","name","PeopleTable","people","personSlugSelected","getParent","find","parent","map","born","died","motherName","fatherName","mother","father","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoaded","setIsLoaded","errorLoading","setErrorLoading","match","useMatch","params","personSlug","useEffect","peopleData","catch","LOADING","finally","showTable","length","EMPTY","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.de2523da.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n\nexport enum Errors {\n  LOADING = 'Something went wrong',\n  EMPTY = 'There are no people on the server',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n}) => (\n  <td>\n    <Link\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n      to={`/people/${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  </td>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[]\n  personSlugSelected: string | undefined\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  personSlugSelected,\n}) => {\n  const getParent = (name: string | null) => (\n    people.find((parent) => parent.name === name) || null\n  );\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const {\n            slug, sex, born, died, motherName, fatherName,\n          } = person;\n\n          const mother = getParent(motherName);\n          const father = getParent(fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': slug === personSlugSelected,\n              })}\n            >\n              <PersonLink\n                person={person}\n              />\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              {mother\n                ? (\n                  <PersonLink\n                    person={mother}\n                  />\n                )\n                : (\n                  <td>\n                    <p>{motherName || '-'}</p>\n                  </td>\n                )}\n              {father\n                ? (\n                  <PersonLink\n                    person={father}\n                  />\n                )\n                : (\n                  <td>\n                    <p>{fatherName || '-'}</p>\n                  </td>\n                )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useMatch } from 'react-router-dom';\nimport { Errors, getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader/Loader';\nimport { PeopleTable } from './Peopletable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [errorLoading, setErrorLoading] = useState('');\n  const match = useMatch('/people/:personSlug');\n  const personSlugSelected = match?.params.personSlug;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((peopleData) => {\n        setPeople(peopleData);\n        setIsLoaded(true);\n      })\n      .catch(() => {\n        setErrorLoading(Errors.LOADING);\n        setIsLoaded(false);\n      })\n      .finally(() => (\n        setIsLoading(false)\n      ));\n  }, []);\n\n  const showTable = !isLoading\n    && isLoaded\n    && !errorLoading\n    && people.length > 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {errorLoading && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              {errorLoading}\n            </p>\n          )}\n          {isLoading && (<Loader />)}\n          {isLoaded && people.length === 0\n            && (\n              <p\n                data-cy=\"noPeopleMessage\"\n              >\n                {Errors.EMPTY}\n              </p>\n            )}\n          {showTable && (\n            <PeopleTable\n              people={people}\n              personSlugSelected={personSlugSelected}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <h1 className=\"title\">Home Page</h1>\n              }\n            />\n\n            <Route\n              path=\"/people\"\n              element={\n                <PeoplePage />\n              }\n            />\n            <Route\n              path=\"/people/:personSlug\"\n              element={\n                <PeoplePage />\n              }\n            />\n            <Route\n              path=\"/home\"\n              element={(\n                <Navigate\n                  to=\"/\"\n                  replace\n                />\n              )}\n            />\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}